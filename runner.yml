AWSTemplateFormatVersion: '2010-09-09'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Cache'
        Parameters: ['CacheBucketName', 'CacheExpirationInDays']
      - Label:
          default: 'EC2'
        Parameters: ['VpcId', 'SubnetId', 'ManagerImageId', 'ManagerInstanceType', 'ManagerKeyPair', 'GitlabRunnerInstanceType']
      - Label:
          default: 'GitLab'
        Parameters: ['GitlabUrl', 'GitlabToken']
      - Label:
          default: 'Runner'
        Parameters: ['GitLabRunnerSpotInstance', 'GitLabRunnerSpotInstancePrice', 'GitlabDockerImage', 'GitlabMaxBuilds', 'GitlabMaxConcurrentBuilds', 'GitlabIdleCount', 'GitlabIdleTime', 'GitlabOffPeakIdleCount', 'GitlabOffPeakIdleTime', 'GitlabOffPeakTimezone', 'GitlabCheckInterval']

Parameters:
  CacheBucketName:
    Type: 'String'
    Description: |
      Name of the S3 bucket to be created to store runners cache. Leave empty to autogenerate a name.
    Default: ''
  CacheExpirationInDays:
    Type: 'Number'
    Description: |
      Number of days after which a cache item is expired. Set to 0 to disable expiration.
    MinValue: 0
    Default: 30
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: |
      ID of VPC where resources will be created.
  AvailabilityZone:
    Type: 'String'
    Description: |
      Name of AvailabilityZone where resources will be created. It needs to be set to the same zone as the specified subnet.
    Default: a
  SubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Description: |
      ID of Subnet where resources will be created.
  ManagerImageId:
    Type: 'AWS::EC2::Image::Id'
    Description: |
      AMI for GitLab Runner's manager instance. If empty uses image id from manager mapping.
    Default: ''
  ManagerInstanceType:
    Type: 'String'
    Description: |
      Instance type for GitLab Runners' manager.
    AllowedValues:
      - 'a1.2xlarge'
      - 'a1.4xlarge'
      - 'a1.large'
      - 'a1.medium'
      - 'a1.xlarge'
      - 'a1'
      - 'c1.medium'
      - 'c1.xlarge'
      - 'c3.2xlarge'
      - 'c3.4xlarge'
      - 'c3.8xlarge'
      - 'c3.large'
      - 'c3.xlarge'
      - 'c3'
      - 'c4.2xlarge'
      - 'c4.4xlarge'
      - 'c4.8xlarge'
      - 'c4.large'
      - 'c4.xlarge'
      - 'c4'
      - 'c5.18xlarge'
      - 'c5.2xlarge'
      - 'c5.4xlarge'
      - 'c5.9xlarge'
      - 'c5.large'
      - 'c5.xlarge'
      - 'c5'
      - 'c5d.18xlarge'
      - 'c5d.2xlarge'
      - 'c5d.4xlarge'
      - 'c5d.9xlarge'
      - 'c5d.large'
      - 'c5d.xlarge'
      - 'c5d'
      - 'c5n.18xlarge'
      - 'c5n.2xlarge'
      - 'c5n.4xlarge'
      - 'c5n.9xlarge'
      - 'c5n.large'
      - 'c5n.xlarge'
      - 'c5n'
      - 'cc2.8xlarge'
      - 'cr1.8xlarge'
      - 'd2.2xlarge'
      - 'd2.4xlarge'
      - 'd2.8xlarge'
      - 'd2.xlarge'
      - 'd2'
      - 'f1.16xlarge'
      - 'f1.2xlarge'
      - 'f1.4xlarge'
      - 'f1'
      - 'g2.2xlarge'
      - 'g2.8xlarge'
      - 'g2'
      - 'g3.16xlarge'
      - 'g3.4xlarge'
      - 'g3.8xlarge'
      - 'g3'
      - 'g3s.xlarge'
      - 'h1.16xlarge'
      - 'h1.2xlarge'
      - 'h1.4xlarge'
      - 'h1.8xlarge'
      - 'h1'
      - 'hs1.8xlarge'
      - 'i2.2xlarge'
      - 'i2.4xlarge'
      - 'i2.8xlarge'
      - 'i2.xlarge'
      - 'i2'
      - 'i3.16xlarge'
      - 'i3.2xlarge'
      - 'i3.4xlarge'
      - 'i3.8xlarge'
      - 'i3.large'
      - 'i3.metal'
      - 'i3.xlarge'
      - 'i3'
      - 'm1.large'
      - 'm1.medium'
      - 'm1.small'
      - 'm1.xlarge'
      - 'm2.2xlarge'
      - 'm2.4xlarge'
      - 'm2.xlarge'
      - 'm3.2xlarge'
      - 'm3.large'
      - 'm3.medium'
      - 'm3.xlarge'
      - 'm3'
      - 'm4.10xlarge'
      - 'm4.16xlarge'
      - 'm4.2xlarge'
      - 'm4.4xlarge'
      - 'm4.large'
      - 'm4.xlarge'
      - 'm4'
      - 'm5.12xlarge'
      - 'm5.24xlarge'
      - 'm5.2xlarge'
      - 'm5.4xlarge'
      - 'm5.large'
      - 'm5.metal'
      - 'm5.xlarge'
      - 'm5'
      - 'm5a.12xlarge'
      - 'm5a.24xlarge'
      - 'm5a.2xlarge'
      - 'm5a.4xlarge'
      - 'm5a.large'
      - 'm5a.xlarge'
      - 'm5d.12xlarge'
      - 'm5d.24xlarge'
      - 'm5d.2xlarge'
      - 'm5d.4xlarge'
      - 'm5d.large'
      - 'm5d.metal'
      - 'm5d.xlarge'
      - 'm5d'
      - 'p2.16xlarge'
      - 'p2.8xlarge'
      - 'p2.xlarge'
      - 'p2'
      - 'p3.16xlarge'
      - 'p3.2xlarge'
      - 'p3.8xlarge'
      - 'p3'
      - 'p3dn.24xlarge'
      - 'p3dn'
      - 'r3.2xlarge'
      - 'r3.4xlarge'
      - 'r3.8xlarge'
      - 'r3.large'
      - 'r3.xlarge'
      - 'r3'
      - 'r4.16xlarge'
      - 'r4.2xlarge'
      - 'r4.4xlarge'
      - 'r4.8xlarge'
      - 'r4.large'
      - 'r4.xlarge'
      - 'r4'
      - 'r5.12xlarge'
      - 'r5.24xlarge'
      - 'r5.2xlarge'
      - 'r5.4xlarge'
      - 'r5.large'
      - 'r5.metal'
      - 'r5.xlarge'
      - 'r5'
      - 'r5a.12xlarge'
      - 'r5a.24xlarge'
      - 'r5a.2xlarge'
      - 'r5a.4xlarge'
      - 'r5a.large'
      - 'r5a.xlarge'
      - 'r5d.12xlarge'
      - 'r5d.24xlarge'
      - 'r5d.2xlarge'
      - 'r5d.4xlarge'
      - 'r5d.large'
      - 'r5d.metal'
      - 'r5d.xlarge'
      - 'r5d'
      - 't1.micro'
      - 't2.2xlarge'
      - 't2.large'
      - 't2.medium'
      - 't2.micro'
      - 't2.nano'
      - 't2.small'
      - 't2.xlarge'
      - 't3.2xlarge'
      - 't3.large'
      - 't3.medium'
      - 't3.micro'
      - 't3.nano'
      - 't3.small'
      - 't3.xlarge'
      - 'u-12tb1'
      - 'u-6tb1'
      - 'u-9tb1'
      - 'x1.16xlarge'
      - 'x1.32xlarge'
      - 'x1'
      - 'x1e.16xlarge'
      - 'x1e.2xlarge'
      - 'x1e.32xlarge'
      - 'x1e.4xlarge'
      - 'x1e.8xlarge'
      - 'x1e.xlarge'
      - 'x1e'
      - 'z1d.12xlarge'
      - 'z1d.2xlarge'
      - 'z1d.3xlarge'
      - 'z1d.6xlarge'
      - 'z1d.large'
      - 'z1d.metal'
      - 'z1d.xlarge'
      - 'z1d'
    Default: 't3.nano'
  ManagerKeyPair:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: |
      Key pair that is authorized to access GitLab Runner's manager instance via SSH.
  GitlabUrl:
    Type: 'String'
    Description: |
      GitLab instance URL.
    Default: 'https://gitlab.com/'
  GitlabToken:
    Type: 'String'
    Description: |
      GitLab Runner token.
    NoEcho: true
  GitlabRunnerInstanceType:
    Type: 'String'
    Description: |
      Instance type for GitLab Runners.
    AllowedValues:
      - 'a1.2xlarge'
      - 'a1.4xlarge'
      - 'a1.large'
      - 'a1.medium'
      - 'a1.xlarge'
      - 'a1'
      - 'c1.medium'
      - 'c1.xlarge'
      - 'c3.2xlarge'
      - 'c3.4xlarge'
      - 'c3.8xlarge'
      - 'c3.large'
      - 'c3.xlarge'
      - 'c3'
      - 'c4.2xlarge'
      - 'c4.4xlarge'
      - 'c4.8xlarge'
      - 'c4.large'
      - 'c4.xlarge'
      - 'c4'
      - 'c5.18xlarge'
      - 'c5.2xlarge'
      - 'c5.4xlarge'
      - 'c5.9xlarge'
      - 'c5.large'
      - 'c5.xlarge'
      - 'c5'
      - 'c5d.18xlarge'
      - 'c5d.2xlarge'
      - 'c5d.4xlarge'
      - 'c5d.9xlarge'
      - 'c5d.large'
      - 'c5d.xlarge'
      - 'c5d'
      - 'c5n.18xlarge'
      - 'c5n.2xlarge'
      - 'c5n.4xlarge'
      - 'c5n.9xlarge'
      - 'c5n.large'
      - 'c5n.xlarge'
      - 'c5n'
      - 'cc2.8xlarge'
      - 'cr1.8xlarge'
      - 'd2.2xlarge'
      - 'd2.4xlarge'
      - 'd2.8xlarge'
      - 'd2.xlarge'
      - 'd2'
      - 'f1.16xlarge'
      - 'f1.2xlarge'
      - 'f1.4xlarge'
      - 'f1'
      - 'g2.2xlarge'
      - 'g2.8xlarge'
      - 'g2'
      - 'g3.16xlarge'
      - 'g3.4xlarge'
      - 'g3.8xlarge'
      - 'g3'
      - 'g3s.xlarge'
      - 'h1.16xlarge'
      - 'h1.2xlarge'
      - 'h1.4xlarge'
      - 'h1.8xlarge'
      - 'h1'
      - 'hs1.8xlarge'
      - 'i2.2xlarge'
      - 'i2.4xlarge'
      - 'i2.8xlarge'
      - 'i2.xlarge'
      - 'i2'
      - 'i3.16xlarge'
      - 'i3.2xlarge'
      - 'i3.4xlarge'
      - 'i3.8xlarge'
      - 'i3.large'
      - 'i3.metal'
      - 'i3.xlarge'
      - 'i3'
      - 'm1.large'
      - 'm1.medium'
      - 'm1.small'
      - 'm1.xlarge'
      - 'm2.2xlarge'
      - 'm2.4xlarge'
      - 'm2.xlarge'
      - 'm3.2xlarge'
      - 'm3.large'
      - 'm3.medium'
      - 'm3.xlarge'
      - 'm3'
      - 'm4.10xlarge'
      - 'm4.16xlarge'
      - 'm4.2xlarge'
      - 'm4.4xlarge'
      - 'm4.large'
      - 'm4.xlarge'
      - 'm4'
      - 'm5.12xlarge'
      - 'm5.24xlarge'
      - 'm5.2xlarge'
      - 'm5.4xlarge'
      - 'm5.large'
      - 'm5.metal'
      - 'm5.xlarge'
      - 'm5'
      - 'm5a.12xlarge'
      - 'm5a.24xlarge'
      - 'm5a.2xlarge'
      - 'm5a.4xlarge'
      - 'm5a.large'
      - 'm5a.xlarge'
      - 'm5d.12xlarge'
      - 'm5d.24xlarge'
      - 'm5d.2xlarge'
      - 'm5d.4xlarge'
      - 'm5d.large'
      - 'm5d.metal'
      - 'm5d.xlarge'
      - 'm5d'
      - 'p2.16xlarge'
      - 'p2.8xlarge'
      - 'p2.xlarge'
      - 'p2'
      - 'p3.16xlarge'
      - 'p3.2xlarge'
      - 'p3.8xlarge'
      - 'p3'
      - 'p3dn.24xlarge'
      - 'p3dn'
      - 'r3.2xlarge'
      - 'r3.4xlarge'
      - 'r3.8xlarge'
      - 'r3.large'
      - 'r3.xlarge'
      - 'r3'
      - 'r4.16xlarge'
      - 'r4.2xlarge'
      - 'r4.4xlarge'
      - 'r4.8xlarge'
      - 'r4.large'
      - 'r4.xlarge'
      - 'r4'
      - 'r5.12xlarge'
      - 'r5.24xlarge'
      - 'r5.2xlarge'
      - 'r5.4xlarge'
      - 'r5.large'
      - 'r5.metal'
      - 'r5.xlarge'
      - 'r5'
      - 'r5a.12xlarge'
      - 'r5a.24xlarge'
      - 'r5a.2xlarge'
      - 'r5a.4xlarge'
      - 'r5a.large'
      - 'r5a.xlarge'
      - 'r5d.12xlarge'
      - 'r5d.24xlarge'
      - 'r5d.2xlarge'
      - 'r5d.4xlarge'
      - 'r5d.large'
      - 'r5d.metal'
      - 'r5d.xlarge'
      - 'r5d'
      - 't1.micro'
      - 't2.2xlarge'
      - 't2.large'
      - 't2.medium'
      - 't2.micro'
      - 't2.nano'
      - 't2.small'
      - 't2.xlarge'
      - 't3.2xlarge'
      - 't3.large'
      - 't3.medium'
      - 't3.micro'
      - 't3.nano'
      - 't3.small'
      - 't3.xlarge'
      - 'u-12tb1'
      - 'u-6tb1'
      - 'u-9tb1'
      - 'x1.16xlarge'
      - 'x1.32xlarge'
      - 'x1'
      - 'x1e.16xlarge'
      - 'x1e.2xlarge'
      - 'x1e.32xlarge'
      - 'x1e.4xlarge'
      - 'x1e.8xlarge'
      - 'x1e.xlarge'
      - 'x1e'
      - 'z1d.12xlarge'
      - 'z1d.2xlarge'
      - 'z1d.3xlarge'
      - 'z1d.6xlarge'
      - 'z1d.large'
      - 'z1d.metal'
      - 'z1d.xlarge'
      - 'z1d'
    Default: 't3.micro'
  GitlabDockerImage:
    Type: 'String'
    Description: |
      Name of the Docker image to be used.
    Default: 'alpine:latest'
  GitlabMaxBuilds:
    Type: 'Number'
    Description: |
      Maximum number of builds before the runner is terminated.
    MinValue: 1
    Default: 10
  GitlabMaxConcurrentBuilds:
    Type: 'Number'
    Description: |
      Maximum number of concurrent builds during working hours.
    MinValue: 1
    Default: 10
  GitlabIdleCount:
    Type: 'Number'
    Description: |
      Number of idle hosts during working hours.
    MinValue: 0
    Default: 1
  GitlabIdleTime:
    Type: 'Number'
    Description: |
      Number of seconds of inactivity before an idle host is shut down during working hours.
    MinValue: 1
    Default: 1800
  GitlabOffPeakTimezone:
    Type: 'String'
    Description: |
      Timezone in which non-working hours are evaluated.
    AllowedValues: [
      'Africa/Algiers', 'Africa/Cairo', 'Africa/Casablanca', 'Africa/Harare', 'Africa/Johannesburg', 'Africa/Monrovia', 'Africa/Nairobi',
      'America/Argentina/Buenos_Aires', 'America/Bogota', 'America/Caracas', 'America/Chicago', 'America/Chihuahua', 'America/Denver', 'America/Godthab', 'America/Guatemala', 'America/Guyana', 'America/Halifax', 'America/Indiana/Indianapolis', 'America/Juneau', 'America/La_Paz', 'America/Lima', 'America/Los_Angeles', 'America/Mazatlan', 'America/Mexico_City', 'America/Monterrey', 'America/Montevideo', 'America/New_York', 'America/Phoenix', 'America/Regina', 'America/Santiago', 'America/Sao_Paulo', 'America/St_Johns', 'America/Tijuana',
      'Asia/Almaty', 'Asia/Baghdad', 'Asia/Baku', 'Asia/Bangkok', 'Asia/Chongqing', 'Asia/Colombo', 'Asia/Dhaka', 'Asia/Hong_Kong', 'Asia/Irkutsk', 'Asia/Jakarta', 'Asia/Jerusalem', 'Asia/Kabul', 'Asia/Kamchatka', 'Asia/Karachi', 'Asia/Kathmandu', 'Asia/Kolkata', 'Asia/Krasnoyarsk', 'Asia/Kuala_Lumpur', 'Asia/Kuwait', 'Asia/Magadan', 'Asia/Muscat', 'Asia/Novosibirsk', 'Asia/Rangoon', 'Asia/Riyadh', 'Asia/Seoul', 'Asia/Shanghai', 'Asia/Singapore', 'Asia/Taipei', 'Asia/Tashkent', 'Asia/Tbilisi', 'Asia/Tehran', 'Asia/Tokyo', 'Asia/Ulaanbaatar', 'Asia/Urumqi', 'Asia/Vladivostok', 'Asia/Yakutsk', 'Asia/Yekaterinburg', 'Asia/Yerevan',
      'Atlantic/Azores', 'Atlantic/Cape_Verde', 'Atlantic/South_Georgia',
      'Australia/Adelaide', 'Australia/Brisbane', 'Australia/Darwin', 'Australia/Hobart', 'Australia/Melbourne', 'Australia/Perth', 'Australia/Sydney',
      'Etc/UTC',
      'Europe/Amsterdam', 'Europe/Athens', 'Europe/Belgrade', 'Europe/Berlin', 'Europe/Bratislava', 'Europe/Brussels', 'Europe/Bucharest', 'Europe/Budapest', 'Europe/Copenhagen', 'Europe/Dublin', 'Europe/Helsinki', 'Europe/Istanbul', 'Europe/Kiev', 'Europe/Lisbon', 'Europe/Ljubljana', 'Europe/London', 'Europe/Madrid', 'Europe/Minsk', 'Europe/Moscow', 'Europe/Paris', 'Europe/Prague', 'Europe/Riga', 'Europe/Rome', 'Europe/Sarajevo', 'Europe/Skopje', 'Europe/Sofia', 'Europe/Stockholm', 'Europe/Tallinn', 'Europe/Vienna', 'Europe/Vilnius', 'Europe/Warsaw', 'Europe/Zagreb',
      'Pacific/Apia', 'Pacific/Auckland', 'Pacific/Chatham', 'Pacific/Fakaofo', 'Pacific/Fiji', 'Pacific/Guadalcanal', 'Pacific/Guam', 'Pacific/Honolulu', 'Pacific/Majuro', 'Pacific/Midway', 'Pacific/Noumea', 'Pacific/Pago_Pago', 'Pacific/Port_Moresby', 'Pacific/Tongatapu',
    ]
    Default: 'Etc/UTC'
  GitlabOffPeakIdleCount:
    Type: 'Number'
    Description: |
      Number of idle hosts during non-working hours.
    MinValue: 0
    Default: 0
  GitlabOffPeakIdleTime:
    Type: 'Number'
    Description: |
      Number of seconds of inactivity before an idle host is shut down during non-working hours.
    MinValue: 1
    Default: 1200
  GitlabCheckInterval:
    Type: 'Number'
    Description: |
      Number of seconds how often the Runner should check GitLab for new jobs.
    MinValue: 0
    Default: 0
  GitlabRunnerSpotInstance:
    Type: 'String'
    Description: |
      Will runners be spot instances?
    AllowedValues: ['Yes', 'No']
    Default: 'No'
  GitlabRunnerSpotInstancePrice:
    Type: 'Number'
    MinValue: 0
    Description: |
      Spot instance bid price.
    Default: 0.08

Mappings:
  Manager:
    eu-north-1:
      AmiId: 'ami-d16fe6af'
    ap-south-1:
      AmiId: 'ami-0889b8a448de4fc44'
    eu-west-3:
      AmiId: 'ami-0451ae4fd8dd178f7'
    eu-west-2:
      AmiId: 'ami-09ead922c1dad67e4'
    eu-west-1:
      AmiId: 'ami-07683a44e80cd32c5'
    ap-northeast-2:
      AmiId: 'ami-047f7b46bd6dd5d84'
    ap-northeast-1:
      AmiId: 'ami-0f9ae750e8274075b'
    sa-east-1:
      AmiId: 'ami-0669a96e355eac82f'
    ca-central-1:
      AmiId: 'ami-03338e1f67dae0168'
    ap-southeast-1:
      AmiId: 'ami-0b419c3a4b01d1859'
    ap-southeast-2:
      AmiId: 'ami-04481c741a0311bbb'
    eu-central-1:
      AmiId: 'ami-09def150731bdbcc2'
    us-east-1:
      AmiId: 'ami-0de53d8956e8dcf80'
    us-east-2:
      AmiId: 'ami-02bcbb802e03574ba'
    us-west-1:
      AmiId: 'ami-0019ef04ac50be30f'
    us-west-2:
      AmiId: 'ami-061392db613a6357b'

Conditions:
  GivenBucketName: !Not [!Equals ['', !Ref 'CacheBucketName']]
  ExpireCacheObjects: !Not [!Equals [0, !Ref 'CacheExpirationInDays']]
  UseSpotInstances: !Equals ['Yes', !Ref 'GitlabRunnerSpotInstance']
  GivenManagerImageId: !Not [!Equals ['', !Ref 'ManagerImageId']]

Outputs:
  CacheBucketName:
    Description: |
      Name of created S3 bucket.
    Value: !Ref 'CacheBucket'
  ManagerIP:
    Description: |
      IP of manager instance.
    Value: !Ref 'ManagerEIP'

Resources:
  ####################################
  ### S3 Bucket for Runners' cache ###
  ####################################
  CacheBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !If
        - 'GivenBucketName'
        - !Ref 'CacheBucketName'
        - !Ref 'AWS::NoValue'
      LifecycleConfiguration: !If
        - 'ExpireCacheObjects'
        - Rules:
            - Status: 'Enabled'
              ExpirationInDays: !Ref 'CacheExpirationInDays'
        - !Ref 'AWS::NoValue'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  #############################
  ### GitLab Runner Manager ###
  #############################
  ManagerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref 'VpcId'
      GroupName: !Sub '${AWS::StackName}-ManagerSecurityGroup'
      GroupDescription: 'Security group for GitLab Runners Manager.'
      SecurityGroupIngress:
        - Description: 'SSH traffic'
          IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
  ManagerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Policies:
        - PolicyName: Cache
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:ListObjects*'
                  - 's3:GetObject*'
                  - 's3:DeleteObject*'
                  - 's3:PutObject*'
                Resource:
                  - !Sub '${CacheBucket.Arn}/*'
              - Effect: 'Allow'
                Action:
                  - 's3:ListBucket'
                Resource:
                  - !GetAtt 'CacheBucket.Arn'
        - PolicyName: Runners
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ec2:CreateKeyPair'
                  - 'ec2:DeleteKeyPair'
                  - 'ec2:ImportKeyPair'
                  - 'ec2:Describe*'
                Resource:
                  - '*'
              - Effect: 'Allow'
                Action:
                  - 'ec2:CreateTags'
                  - 'ssm:UpdateInstanceInformation'
                Resource:
                  - '*'
                Condition:
                  StringEquals:
                    'ec2:Region': !Ref 'AWS::Region'
                    'ec2:InstanceType': !Ref 'GitlabRunnerInstanceType'
                  StringLike:
                    'aws:RequestTag/Name': '*gitlab-docker-machine-*'
                  ForAllValues:StringEquals:
                    'aws:TagKeys': ['Name']
              - Effect: 'Allow'
                Action:
                  - 'ec2:RunInstances'
                  - 'ec2:RequestSpotInstances'
                Resource:
                  - '*'
                Condition:
                  StringEqualsIfExists:
                    'ec2:InstanceType': !Ref 'GitlabRunnerInstanceType'
                    'ec2:Region': !Ref 'AWS::Region'
                    'ec2:Tenancy': 'default'
                  ArnEqualsIfExists:
                    'ec2:Vpc': !Sub 'arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:vpc/${VpcId}'
                    'ec2:InstanceProfile': !GetAtt 'RunnersInstanceProfile.Arn'
              - Effect: 'Allow'
                Action:
                  - 'ec2:TerminateInstances'
                  - 'ec2:StopInstances'
                  - 'ec2:StartInstances'
                  - 'ec2:RebootInstances'
                Resource:
                  - '*'
                Condition:
                  StringLike:
                    'ec2:ResourceTag/Name': '*gitlab-docker-machine-*'
                  ArnEquals:
                    'ec2:InstanceProfile': !GetAtt 'RunnersInstanceProfile.Arn'
              - Effect: 'Allow'
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !GetAtt 'RunnersRole.Arn'
  ManagerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref 'ManagerRole'
  Manager:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !If
        - 'GivenManagerImageId'
        - !Ref ManagerImageId
        - !FindInMap ['Manager', !Ref 'AWS::Region', 'AmiId']
      InstanceType: !Ref 'ManagerInstanceType'
      KeyName: !Ref 'ManagerKeyPair'
      IamInstanceProfile: !Ref 'ManagerInstanceProfile'
      SecurityGroupIds:
        - !Ref 'ManagerSecurityGroup'
      SubnetId: !Ref 'SubnetId'
      Tags:
        - Key: 'Name'
          Value: !Ref 'AWS::StackName'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y aws-cfn-bootstrap

          # Install the files and packages from the metadata
          /opt/aws/bin/cfn-init --stack '${AWS::StackName}' --region '${AWS::Region}' --resource Manager --configsets default

          # Signal the status from cfn-init
          /opt/aws/bin/cfn-signal -e $? --stack '${AWS::StackName}' --region '${AWS::Region}' --resource Manager
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          install:
            - 'repositories'
            - 'packages'
          config:
            - 'config'
          default:
            - ConfigSet: 'install'
            - ConfigSet: 'config'

        repositories:
          commands:
            '10-gitlab-runner':
              command: 'curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | bash'
        packages:
          packages:
            yum:
              'docker': []
              'gitlab-runner': []
              'tzdata': []
          files:
            '/etc/cfn/cfn-hup.conf':
              owner: 'root'
              group: 'root'
              mode: '000400'
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
            '/etc/cfn/hooks.d/cfn-auto-reloader.conf':
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.Manager.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --region ${AWS::Region} --resource Manager --configsets default
                runas=root
          commands:
            10-docker-machine:
              command: 'curl -L https://github.com/docker/machine/releases/download/v0.16.2/docker-machine-`uname -s`-`uname -m` > /tmp/docker-machine && install /tmp/docker-machine /usr/bin/docker-machine'
            20-gitlab-runner-start:
              command: 'gitlab-runner start'
          services:
            sysvinit:
              'cfn-hup':
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - '/etc/cfn/cfn-hup.conf'
                  - '/etc/cfn/hooks.d/cfn-auto-reloader.conf'
        config:
          files:
            '/etc/gitlab-runner/config.toml':
              owner: 'gitlab-runner'
              group: 'gitlab-runner'
              mode: '000600'
              content:
                Fn::Sub:
                  - |
                    concurrent = ${GitlabMaxConcurrentBuilds}
                    check_interval = ${GitlabCheckInterval}

                    [[runners]]
                      name = "${AWS::StackName}"
                      url = "${GitlabUrl}"
                      token = "${GitlabToken}"
                      executor = "docker+machine"
                      environment = [
                        "DOCKER_DRIVER=overlay2",
                        "DOCKER_TLS_CERTDIR=/certs"
                      ]
                      [runners.docker]
                        tls_verify = false
                        image = "${GitlabDockerImage}"
                        privileged = true
                        disable_cache = false
                        volumes = ["/certs/client", "/cache"]
                        shm_size = 0
                      [runners.cache]
                        Type = "s3"
                        Shared = true
                      [runners.cache.s3]
                        ServerAddress = "s3.${AWS::URLSuffix}"
                        BucketName = "${CacheBucket}"
                        BucketLocation = "${AWS::Region}"
                      [runners.machine]
                        IdleCount = ${GitlabIdleCount}
                        IdleTime = ${GitlabIdleTime}
                        MaxBuilds = ${GitlabMaxBuilds}
                        MachineDriver = "amazonec2"
                        MachineName = "gitlab-docker-machine-%s"
                        MachineOptions = [
                          "amazonec2-instance-type=${GitlabRunnerInstanceType}",
                          "amazonec2-region=${AWS::Region}",
                          "amazonec2-vpc-id=${VpcId}",
                          "amazonec2-zone=${AvailabilityZone}",
                          "amazonec2-subnet-id=${SubnetId}",
                          "amazonec2-security-group=${AWS::StackName}-RunnersSecurityGroup",
                          "amazonec2-use-private-address=true",
                          "amazonec2-iam-instance-profile=${RunnersInstanceProfile}"
                          ${LocalSpotVar}
                        ]
                        OffPeakTimezone = "${GitlabOffPeakTimezone}"
                        OffPeakPeriods = ["* * 0-8,18-23 * * mon-fri *", "* * * * * sat,sun *"]
                        OffPeakIdleCount = ${GitlabOffPeakIdleCount}
                        OffPeakIdleTime = ${GitlabOffPeakIdleTime}
                  - LocalSpotVar: !If ['UseSpotInstances', !Sub ', "amazonec2-request-spot-instance=true", "amazonec2-spot-price=${GitlabRunnerSpotInstancePrice}"', '']
            '/etc/rsyslog.d/25-gitlab-runner.conf':
              owner: 'root'
              group: 'root'
              mode: '000644'
              content: |
                :programname, isequal, "gitlab-runner" /var/log/gitlab-runner.log
          services:
            sysvinit:
              gitlab-runner:
                ensureRunning: 'true'
                enabled: 'true'
                files: ['/etc/gitlab-runner/config.toml']
              rsyslog:
                ensureRunning: 'true'
                enabled: 'true'
                files: ['/etc/rsyslog.d/25-gitlab-runner.conf']
    CreationPolicy:
      ResourceSignal:
        Timeout: 'PT15M'
    DependsOn:
      - 'RunnersSecurityGroup'
  ManagerEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: 'vpc'
      InstanceId: !Ref 'Manager'

  ######################
  ### GitLab Runners ###
  ######################
  RunnersRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
  RunnersInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref 'RunnersRole'
  RunnersSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref 'VpcId'
      GroupName: !Sub '${AWS::StackName}-RunnersSecurityGroup'
      GroupDescription: 'Security group for GitLab Runners.'
      SecurityGroupIngress:
        - Description: 'SSH traffic from Manager'
          IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref 'ManagerSecurityGroup'
        - Description: 'Docker traffic from Manager'
          IpProtocol: 'tcp'
          FromPort: 2376
          ToPort: 2376
          SourceSecurityGroupId: !Ref 'ManagerSecurityGroup'
